#ifndef EVENTS_IDL
#define EVENTS_IDL

#include "scs.idl"

module event_service {

   /** Event */
   typedef any Event;

    /** Exceptions*/
   exception NameAlreadyInUse {
      string name;
   };
   exception InvalidName {
      string name;
   };
   
   /** ChannelDescr */
   struct ChannelDescr {
      string name;
      scs::core::IComponent channel;
   };
   typedef sequence<ChannelDescr> ChannelDescrSeq;
   
   /** Componente EventChannel */
   interface EventSink {
      void push (in Event ev);
      void disconnect();
   };

   /** Component EventService */
   interface ChannelFactory {
      scs::core::IComponent create(in string name) raises (NameAlreadyInUse);
      void destroy(in string name) raises (InvalidName);
   };

   /** Component EventService */
   interface ChannelCollection {
      scs::core::IComponent getChannel(in string name);
      ChannelDescrSeq getAll();

   };

};

#endif
